// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: iShare.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "iShare.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace helloworld {

namespace {

const ::google::protobuf::Descriptor* Login_m_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Login_m_reflection_ = NULL;
const ::google::protobuf::Descriptor* Sign_m_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Sign_m_reflection_ = NULL;
const ::google::protobuf::Descriptor* Inf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Inf_reflection_ = NULL;
const ::google::protobuf::Descriptor* Repeated_string_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Repeated_string_reflection_ = NULL;
const ::google::protobuf::Descriptor* User_detail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  User_detail_reflection_ = NULL;
const ::google::protobuf::Descriptor* Share_inf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Share_inf_reflection_ = NULL;
const ::google::protobuf::Descriptor* Bill_request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Bill_request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Syn_data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Syn_data_reflection_ = NULL;
const ::google::protobuf::Descriptor* HelloRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HelloRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* HelloReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HelloReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* Image_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Image_reflection_ = NULL;
const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_reflection_ = NULL;
const ::google::protobuf::Descriptor* IgnoreMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IgnoreMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* BillPayment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BillPayment_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_iShare_2eproto() {
  protobuf_AddDesc_iShare_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "iShare.proto");
  GOOGLE_CHECK(file != NULL);
  Login_m_descriptor_ = file->message_type(0);
  static const int Login_m_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_m, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_m, password_),
  };
  Login_m_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Login_m_descriptor_,
      Login_m::default_instance_,
      Login_m_offsets_,
      -1,
      -1,
      -1,
      sizeof(Login_m),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_m, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login_m, _is_default_instance_));
  Sign_m_descriptor_ = file->message_type(1);
  static const int Sign_m_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sign_m, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sign_m, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sign_m, email_),
  };
  Sign_m_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Sign_m_descriptor_,
      Sign_m::default_instance_,
      Sign_m_offsets_,
      -1,
      -1,
      -1,
      sizeof(Sign_m),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sign_m, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Sign_m, _is_default_instance_));
  Inf_descriptor_ = file->message_type(2);
  static const int Inf_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Inf, information_),
  };
  Inf_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Inf_descriptor_,
      Inf::default_instance_,
      Inf_offsets_,
      -1,
      -1,
      -1,
      sizeof(Inf),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Inf, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Inf, _is_default_instance_));
  Repeated_string_descriptor_ = file->message_type(3);
  static const int Repeated_string_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Repeated_string, content_),
  };
  Repeated_string_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Repeated_string_descriptor_,
      Repeated_string::default_instance_,
      Repeated_string_offsets_,
      -1,
      -1,
      -1,
      sizeof(Repeated_string),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Repeated_string, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Repeated_string, _is_default_instance_));
  User_detail_descriptor_ = file->message_type(4);
  static const int User_detail_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User_detail, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User_detail, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User_detail, friends_),
  };
  User_detail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      User_detail_descriptor_,
      User_detail::default_instance_,
      User_detail_offsets_,
      -1,
      -1,
      -1,
      sizeof(User_detail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User_detail, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(User_detail, _is_default_instance_));
  Share_inf_descriptor_ = file->message_type(5);
  static const int Share_inf_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Share_inf, creater_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Share_inf, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Share_inf, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Share_inf, paidby_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Share_inf, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Share_inf, note_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Share_inf, image_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Share_inf, members_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Share_inf, members_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Share_inf, bill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Share_inf, paidstatus_),
  };
  Share_inf_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Share_inf_descriptor_,
      Share_inf::default_instance_,
      Share_inf_offsets_,
      -1,
      -1,
      -1,
      sizeof(Share_inf),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Share_inf, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Share_inf, _is_default_instance_));
  Bill_request_descriptor_ = file->message_type(6);
  static const int Bill_request_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bill_request, username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bill_request, start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bill_request, amount_),
  };
  Bill_request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Bill_request_descriptor_,
      Bill_request::default_instance_,
      Bill_request_offsets_,
      -1,
      -1,
      -1,
      sizeof(Bill_request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bill_request, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bill_request, _is_default_instance_));
  Syn_data_descriptor_ = file->message_type(7);
  static const int Syn_data_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Syn_data, friend__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Syn_data, bill_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Syn_data, delete__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Syn_data, request_),
  };
  Syn_data_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Syn_data_descriptor_,
      Syn_data::default_instance_,
      Syn_data_offsets_,
      -1,
      -1,
      -1,
      sizeof(Syn_data),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Syn_data, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Syn_data, _is_default_instance_));
  HelloRequest_descriptor_ = file->message_type(8);
  static const int HelloRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, name_),
  };
  HelloRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HelloRequest_descriptor_,
      HelloRequest::default_instance_,
      HelloRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(HelloRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloRequest, _is_default_instance_));
  HelloReply_descriptor_ = file->message_type(9);
  static const int HelloReply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReply, message_),
  };
  HelloReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HelloReply_descriptor_,
      HelloReply::default_instance_,
      HelloReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(HelloReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReply, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HelloReply, _is_default_instance_));
  Image_descriptor_ = file->message_type(10);
  static const int Image_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, data_),
  };
  Image_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Image_descriptor_,
      Image::default_instance_,
      Image_offsets_,
      -1,
      -1,
      -1,
      sizeof(Image),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, _is_default_instance_));
  Request_descriptor_ = file->message_type(11);
  static const int Request_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, request_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, receiver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, content_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, request_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, response_date_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, ignore_from_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, ignore_to_),
  };
  Request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_descriptor_,
      Request::default_instance_,
      Request_offsets_,
      -1,
      -1,
      -1,
      sizeof(Request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _is_default_instance_));
  Response_descriptor_ = file->message_type(12);
  static const int Response_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, request_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, sender_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, receiver_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, response_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, response_date_),
  };
  Response_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Response_descriptor_,
      Response::default_instance_,
      Response_offsets_,
      -1,
      -1,
      -1,
      sizeof(Response),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _is_default_instance_));
  IgnoreMessage_descriptor_ = file->message_type(13);
  static const int IgnoreMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IgnoreMessage, requestlog_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IgnoreMessage, user_),
  };
  IgnoreMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IgnoreMessage_descriptor_,
      IgnoreMessage::default_instance_,
      IgnoreMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(IgnoreMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IgnoreMessage, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IgnoreMessage, _is_default_instance_));
  BillPayment_descriptor_ = file->message_type(14);
  static const int BillPayment_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BillPayment, bill_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BillPayment, paidstatus_),
  };
  BillPayment_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BillPayment_descriptor_,
      BillPayment::default_instance_,
      BillPayment_offsets_,
      -1,
      -1,
      -1,
      sizeof(BillPayment),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BillPayment, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BillPayment, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_iShare_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Login_m_descriptor_, &Login_m::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Sign_m_descriptor_, &Sign_m::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Inf_descriptor_, &Inf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Repeated_string_descriptor_, &Repeated_string::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      User_detail_descriptor_, &User_detail::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Share_inf_descriptor_, &Share_inf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Bill_request_descriptor_, &Bill_request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Syn_data_descriptor_, &Syn_data::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HelloRequest_descriptor_, &HelloRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HelloReply_descriptor_, &HelloReply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Image_descriptor_, &Image::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_descriptor_, &Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Response_descriptor_, &Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IgnoreMessage_descriptor_, &IgnoreMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BillPayment_descriptor_, &BillPayment::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_iShare_2eproto() {
  delete Login_m::default_instance_;
  delete Login_m_reflection_;
  delete Sign_m::default_instance_;
  delete Sign_m_reflection_;
  delete Inf::default_instance_;
  delete Inf_reflection_;
  delete Repeated_string::default_instance_;
  delete Repeated_string_reflection_;
  delete User_detail::default_instance_;
  delete User_detail_reflection_;
  delete Share_inf::default_instance_;
  delete Share_inf_reflection_;
  delete Bill_request::default_instance_;
  delete Bill_request_reflection_;
  delete Syn_data::default_instance_;
  delete Syn_data_reflection_;
  delete HelloRequest::default_instance_;
  delete HelloRequest_reflection_;
  delete HelloReply::default_instance_;
  delete HelloReply_reflection_;
  delete Image::default_instance_;
  delete Image_reflection_;
  delete Request::default_instance_;
  delete Request_reflection_;
  delete Response::default_instance_;
  delete Response_reflection_;
  delete IgnoreMessage::default_instance_;
  delete IgnoreMessage_reflection_;
  delete BillPayment::default_instance_;
  delete BillPayment_reflection_;
}

void protobuf_AddDesc_iShare_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014iShare.proto\022\nhelloworld\"-\n\007Login_m\022\020\n"
    "\010username\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\";\n\006Sig"
    "n_m\022\020\n\010username\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022"
    "\r\n\005email\030\003 \001(\t\"\032\n\003Inf\022\023\n\013information\030\001 \001"
    "(\t\"\"\n\017Repeated_string\022\017\n\007content\030\001 \003(\t\"\?"
    "\n\013User_detail\022\020\n\010username\030\001 \001(\t\022\r\n\005email"
    "\030\002 \001(\t\022\017\n\007friends\030\003 \003(\t\"\302\001\n\tShare_inf\022\017\n"
    "\007creater\030\001 \001(\t\022\016\n\006amount\030\002 \001(\t\022\014\n\004type\030\003"
    " \001(\t\022\016\n\006paidBy\030\004 \001(\t\022\014\n\004data\030\005 \001(\t\022\014\n\004no"
    "te\030\006 \001(\t\022\r\n\005image\030\007 \001(\t\022\017\n\007members\030\010 \003(\t"
    "\022\025\n\rmembers_count\030\t \001(\005\022\017\n\007bill_id\030\n \001(\t"
    "\022\022\n\npaidStatus\030\013 \001(\t\"\?\n\014Bill_request\022\020\n\010"
    "username\030\001 \001(\t\022\r\n\005start\030\002 \001(\t\022\016\n\006amount\030"
    "\003 \001(\t\"I\n\010Syn_data\022\016\n\006friend\030\001 \001(\t\022\014\n\004bil"
    "l\030\002 \001(\t\022\016\n\006delete\030\003 \001(\t\022\017\n\007request\030\004 \001(\t"
    "\"\034\n\014HelloRequest\022\014\n\004name\030\001 \001(\t\"\035\n\nHelloR"
    "eply\022\017\n\007message\030\001 \001(\t\"#\n\005Image\022\014\n\004name\030\001"
    " \001(\t\022\014\n\004data\030\002 \001(\014\"\305\001\n\007Request\022\022\n\nreques"
    "t_id\030\001 \001(\t\022\016\n\006sender\030\002 \001(\t\022\020\n\010receiver\030\003"
    " \001(\t\022\014\n\004type\030\004 \001(\t\022\017\n\007content\030\005 \001(\t\022\020\n\010r"
    "esponse\030\006 \001(\t\022\024\n\014request_date\030\007 \001(\t\022\025\n\rr"
    "esponse_date\030\010 \001(\t\022\023\n\013ignore_from\030\t \001(\t\022"
    "\021\n\tignore_to\030\n \001(\t\"i\n\010Response\022\022\n\nreques"
    "t_id\030\001 \001(\t\022\016\n\006sender\030\002 \001(\t\022\020\n\010receiver\030\003"
    " \001(\t\022\020\n\010response\030\004 \001(\t\022\025\n\rresponse_date\030"
    "\005 \001(\t\"4\n\rIgnoreMessage\022\025\n\rrequestLog_id\030"
    "\001 \001(\t\022\014\n\004user\030\002 \001(\t\"2\n\013BillPayment\022\017\n\007bi"
    "ll_id\030\001 \001(\t\022\022\n\npaidStatus\030\002 \001(\t2\366\t\n\007Gree"
    "ter\022>\n\010SayHello\022\030.helloworld.HelloReques"
    "t\032\026.helloworld.HelloReply\"\000\022/\n\005Login\022\023.h"
    "elloworld.Login_m\032\017.helloworld.Inf\"\000\0220\n\007"
    "Sign_up\022\022.helloworld.Sign_m\032\017.helloworld"
    ".Inf\"\000\0226\n\010User_inf\022\017.helloworld.Inf\032\027.he"
    "lloworld.User_detail\"\000\022A\n\017Search_usernam"
    "e\022\017.helloworld.Inf\032\033.helloworld.Repeated"
    "_string\"\000\022<\n\nAdd_friend\022\033.helloworld.Rep"
    "eated_string\032\017.helloworld.Inf\"\000\022\?\n\rDelet"
    "e_friend\022\033.helloworld.Repeated_string\032\017."
    "helloworld.Inf\"\000\0228\n\014Create_share\022\025.hello"
    "world.Share_inf\032\017.helloworld.Inf\"\000\0222\n\003Sy"
    "n\022\017.helloworld.Inf\032\024.helloworld.Syn_data"
    "\"\000(\0010\001\022C\n\014Obtain_bills\022\030.helloworld.Bill"
    "_request\032\025.helloworld.Share_inf\"\0000\001\0222\n\010S"
    "end_Img\022\021.helloworld.Image\032\017.helloworld."
    "Inf\"\000(\001\022A\n\013Receive_Img\022\033.helloworld.Repe"
    "ated_string\032\021.helloworld.Image\"\0000\001\0222\n\014Re"
    "set_Status\022\017.helloworld.Inf\032\017.helloworld"
    ".Inf\"\000\0226\n\014Send_request\022\023.helloworld.Requ"
    "est\032\017.helloworld.Inf\"\000\022:\n\016Obtain_request"
    "\022\017.helloworld.Inf\032\023.helloworld.Request\"\000"
    "0\001\022=\n\021Obtain_requestLog\022\017.helloworld.Inf"
    "\032\023.helloworld.Request\"\0000\001\022D\n\030Obtain_requ"
    "estLogHistory\022\017.helloworld.Inf\032\023.hellowo"
    "rld.Request\"\0000\001\022;\n\020Request_response\022\024.he"
    "lloworld.Response\032\017.helloworld.Inf\"\000\022;\n\013"
    "MakePayment\022\027.helloworld.BillPayment\032\017.h"
    "elloworld.Inf\"\000(\001\022@\n\020IgnoreRequestLog\022\031."
    "helloworld.IgnoreMessage\032\017.helloworld.In"
    "f\"\000\022;\n\021Create_requestLog\022\023.helloworld.Re"
    "quest\032\017.helloworld.Inf\"\000B\022\n\020io.grpc.exam"
    "plesb\006proto3", 2412);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "iShare.proto", &protobuf_RegisterTypes);
  Login_m::default_instance_ = new Login_m();
  Sign_m::default_instance_ = new Sign_m();
  Inf::default_instance_ = new Inf();
  Repeated_string::default_instance_ = new Repeated_string();
  User_detail::default_instance_ = new User_detail();
  Share_inf::default_instance_ = new Share_inf();
  Bill_request::default_instance_ = new Bill_request();
  Syn_data::default_instance_ = new Syn_data();
  HelloRequest::default_instance_ = new HelloRequest();
  HelloReply::default_instance_ = new HelloReply();
  Image::default_instance_ = new Image();
  Request::default_instance_ = new Request();
  Response::default_instance_ = new Response();
  IgnoreMessage::default_instance_ = new IgnoreMessage();
  BillPayment::default_instance_ = new BillPayment();
  Login_m::default_instance_->InitAsDefaultInstance();
  Sign_m::default_instance_->InitAsDefaultInstance();
  Inf::default_instance_->InitAsDefaultInstance();
  Repeated_string::default_instance_->InitAsDefaultInstance();
  User_detail::default_instance_->InitAsDefaultInstance();
  Share_inf::default_instance_->InitAsDefaultInstance();
  Bill_request::default_instance_->InitAsDefaultInstance();
  Syn_data::default_instance_->InitAsDefaultInstance();
  HelloRequest::default_instance_->InitAsDefaultInstance();
  HelloReply::default_instance_->InitAsDefaultInstance();
  Image::default_instance_->InitAsDefaultInstance();
  Request::default_instance_->InitAsDefaultInstance();
  Response::default_instance_->InitAsDefaultInstance();
  IgnoreMessage::default_instance_->InitAsDefaultInstance();
  BillPayment::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_iShare_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_iShare_2eproto {
  StaticDescriptorInitializer_iShare_2eproto() {
    protobuf_AddDesc_iShare_2eproto();
  }
} static_descriptor_initializer_iShare_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int Login_m::kUsernameFieldNumber;
const int Login_m::kPasswordFieldNumber;
#endif  // !_MSC_VER

Login_m::Login_m()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.Login_m)
}

void Login_m::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Login_m::Login_m(const Login_m& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.Login_m)
}

void Login_m::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Login_m::~Login_m() {
  // @@protoc_insertion_point(destructor:helloworld.Login_m)
  SharedDtor();
}

void Login_m::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Login_m::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login_m::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Login_m_descriptor_;
}

const Login_m& Login_m::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

Login_m* Login_m::default_instance_ = NULL;

Login_m* Login_m::New(::google::protobuf::Arena* arena) const {
  Login_m* n = new Login_m;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login_m::Clear() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Login_m::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.Login_m)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string username = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Login_m.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Login_m.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.Login_m)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.Login_m)
  return false;
#undef DO_
}

void Login_m::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.Login_m)
  // optional string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Login_m.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Login_m.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.Login_m)
}

::google::protobuf::uint8* Login_m::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.Login_m)
  // optional string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Login_m.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Login_m.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.Login_m)
  return target;
}

int Login_m::ByteSize() const {
  int total_size = 0;

  // optional string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login_m::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Login_m* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Login_m>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Login_m::MergeFrom(const Login_m& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void Login_m::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login_m::CopyFrom(const Login_m& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login_m::IsInitialized() const {

  return true;
}

void Login_m::Swap(Login_m* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login_m::InternalSwap(Login_m* other) {
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login_m::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Login_m_descriptor_;
  metadata.reflection = Login_m_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login_m

// optional string username = 1;
void Login_m::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_m::username() const {
  // @@protoc_insertion_point(field_get:helloworld.Login_m.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_m::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Login_m.username)
}
 void Login_m::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Login_m.username)
}
 void Login_m::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Login_m.username)
}
 ::std::string* Login_m::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Login_m.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_m::release_username() {
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_m::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Login_m.username)
}

// optional string password = 2;
void Login_m::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Login_m::password() const {
  // @@protoc_insertion_point(field_get:helloworld.Login_m.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_m::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Login_m.password)
}
 void Login_m::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Login_m.password)
}
 void Login_m::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Login_m.password)
}
 ::std::string* Login_m::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Login_m.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Login_m::release_password() {
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Login_m::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Login_m.password)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Sign_m::kUsernameFieldNumber;
const int Sign_m::kPasswordFieldNumber;
const int Sign_m::kEmailFieldNumber;
#endif  // !_MSC_VER

Sign_m::Sign_m()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.Sign_m)
}

void Sign_m::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Sign_m::Sign_m(const Sign_m& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.Sign_m)
}

void Sign_m::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Sign_m::~Sign_m() {
  // @@protoc_insertion_point(destructor:helloworld.Sign_m)
  SharedDtor();
}

void Sign_m::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Sign_m::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Sign_m::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Sign_m_descriptor_;
}

const Sign_m& Sign_m::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

Sign_m* Sign_m::default_instance_ = NULL;

Sign_m* Sign_m::New(::google::protobuf::Arena* arena) const {
  Sign_m* n = new Sign_m;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Sign_m::Clear() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Sign_m::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.Sign_m)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string username = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Sign_m.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Sign_m.password");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_email;
        break;
      }

      // optional string email = 3;
      case 3: {
        if (tag == 26) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Sign_m.email");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.Sign_m)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.Sign_m)
  return false;
#undef DO_
}

void Sign_m::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.Sign_m)
  // optional string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Sign_m.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Sign_m.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string email = 3;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Sign_m.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->email(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.Sign_m)
}

::google::protobuf::uint8* Sign_m::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.Sign_m)
  // optional string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Sign_m.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Sign_m.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string email = 3;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Sign_m.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.Sign_m)
  return target;
}

int Sign_m::ByteSize() const {
  int total_size = 0;

  // optional string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string email = 3;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Sign_m::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Sign_m* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Sign_m>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Sign_m::MergeFrom(const Sign_m& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
}

void Sign_m::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Sign_m::CopyFrom(const Sign_m& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Sign_m::IsInitialized() const {

  return true;
}

void Sign_m::Swap(Sign_m* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Sign_m::InternalSwap(Sign_m* other) {
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  email_.Swap(&other->email_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Sign_m::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Sign_m_descriptor_;
  metadata.reflection = Sign_m_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Sign_m

// optional string username = 1;
void Sign_m::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Sign_m::username() const {
  // @@protoc_insertion_point(field_get:helloworld.Sign_m.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Sign_m::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Sign_m.username)
}
 void Sign_m::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Sign_m.username)
}
 void Sign_m::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Sign_m.username)
}
 ::std::string* Sign_m::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Sign_m.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Sign_m::release_username() {
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Sign_m::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Sign_m.username)
}

// optional string password = 2;
void Sign_m::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Sign_m::password() const {
  // @@protoc_insertion_point(field_get:helloworld.Sign_m.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Sign_m::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Sign_m.password)
}
 void Sign_m::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Sign_m.password)
}
 void Sign_m::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Sign_m.password)
}
 ::std::string* Sign_m::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Sign_m.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Sign_m::release_password() {
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Sign_m::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Sign_m.password)
}

// optional string email = 3;
void Sign_m::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Sign_m::email() const {
  // @@protoc_insertion_point(field_get:helloworld.Sign_m.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Sign_m::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Sign_m.email)
}
 void Sign_m::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Sign_m.email)
}
 void Sign_m::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Sign_m.email)
}
 ::std::string* Sign_m::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Sign_m.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Sign_m::release_email() {
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Sign_m::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Sign_m.email)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Inf::kInformationFieldNumber;
#endif  // !_MSC_VER

Inf::Inf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.Inf)
}

void Inf::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Inf::Inf(const Inf& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.Inf)
}

void Inf::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  information_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Inf::~Inf() {
  // @@protoc_insertion_point(destructor:helloworld.Inf)
  SharedDtor();
}

void Inf::SharedDtor() {
  information_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Inf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Inf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Inf_descriptor_;
}

const Inf& Inf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

Inf* Inf::default_instance_ = NULL;

Inf* Inf::New(::google::protobuf::Arena* arena) const {
  Inf* n = new Inf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Inf::Clear() {
  information_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Inf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.Inf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string information = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_information()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->information().data(), this->information().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Inf.information");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.Inf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.Inf)
  return false;
#undef DO_
}

void Inf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.Inf)
  // optional string information = 1;
  if (this->information().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->information().data(), this->information().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Inf.information");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->information(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.Inf)
}

::google::protobuf::uint8* Inf::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.Inf)
  // optional string information = 1;
  if (this->information().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->information().data(), this->information().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Inf.information");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->information(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.Inf)
  return target;
}

int Inf::ByteSize() const {
  int total_size = 0;

  // optional string information = 1;
  if (this->information().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->information());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Inf::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Inf* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Inf>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Inf::MergeFrom(const Inf& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.information().size() > 0) {

    information_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.information_);
  }
}

void Inf::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Inf::CopyFrom(const Inf& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Inf::IsInitialized() const {

  return true;
}

void Inf::Swap(Inf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Inf::InternalSwap(Inf* other) {
  information_.Swap(&other->information_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Inf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Inf_descriptor_;
  metadata.reflection = Inf_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Inf

// optional string information = 1;
void Inf::clear_information() {
  information_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Inf::information() const {
  // @@protoc_insertion_point(field_get:helloworld.Inf.information)
  return information_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Inf::set_information(const ::std::string& value) {
  
  information_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Inf.information)
}
 void Inf::set_information(const char* value) {
  
  information_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Inf.information)
}
 void Inf::set_information(const char* value, size_t size) {
  
  information_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Inf.information)
}
 ::std::string* Inf::mutable_information() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Inf.information)
  return information_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Inf::release_information() {
  
  return information_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Inf::set_allocated_information(::std::string* information) {
  if (information != NULL) {
    
  } else {
    
  }
  information_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), information);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Inf.information)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Repeated_string::kContentFieldNumber;
#endif  // !_MSC_VER

Repeated_string::Repeated_string()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.Repeated_string)
}

void Repeated_string::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Repeated_string::Repeated_string(const Repeated_string& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.Repeated_string)
}

void Repeated_string::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
}

Repeated_string::~Repeated_string() {
  // @@protoc_insertion_point(destructor:helloworld.Repeated_string)
  SharedDtor();
}

void Repeated_string::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Repeated_string::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Repeated_string::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Repeated_string_descriptor_;
}

const Repeated_string& Repeated_string::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

Repeated_string* Repeated_string::default_instance_ = NULL;

Repeated_string* Repeated_string::New(::google::protobuf::Arena* arena) const {
  Repeated_string* n = new Repeated_string;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Repeated_string::Clear() {
  content_.Clear();
}

bool Repeated_string::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.Repeated_string)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string content = 1;
      case 1: {
        if (tag == 10) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content(this->content_size() - 1).data(),
            this->content(this->content_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Repeated_string.content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_content;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.Repeated_string)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.Repeated_string)
  return false;
#undef DO_
}

void Repeated_string::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.Repeated_string)
  // repeated string content = 1;
  for (int i = 0; i < this->content_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->content(i).data(), this->content(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "helloworld.Repeated_string.content");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->content(i), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.Repeated_string)
}

::google::protobuf::uint8* Repeated_string::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.Repeated_string)
  // repeated string content = 1;
  for (int i = 0; i < this->content_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content(i).data(), this->content(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Repeated_string.content");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->content(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.Repeated_string)
  return target;
}

int Repeated_string::ByteSize() const {
  int total_size = 0;

  // repeated string content = 1;
  total_size += 1 * this->content_size();
  for (int i = 0; i < this->content_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->content(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Repeated_string::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Repeated_string* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Repeated_string>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Repeated_string::MergeFrom(const Repeated_string& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  content_.MergeFrom(from.content_);
}

void Repeated_string::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Repeated_string::CopyFrom(const Repeated_string& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Repeated_string::IsInitialized() const {

  return true;
}

void Repeated_string::Swap(Repeated_string* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Repeated_string::InternalSwap(Repeated_string* other) {
  content_.UnsafeArenaSwap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Repeated_string::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Repeated_string_descriptor_;
  metadata.reflection = Repeated_string_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Repeated_string

// repeated string content = 1;
int Repeated_string::content_size() const {
  return content_.size();
}
void Repeated_string::clear_content() {
  content_.Clear();
}
 const ::std::string& Repeated_string::content(int index) const {
  // @@protoc_insertion_point(field_get:helloworld.Repeated_string.content)
  return content_.Get(index);
}
 ::std::string* Repeated_string::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:helloworld.Repeated_string.content)
  return content_.Mutable(index);
}
 void Repeated_string::set_content(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:helloworld.Repeated_string.content)
  content_.Mutable(index)->assign(value);
}
 void Repeated_string::set_content(int index, const char* value) {
  content_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:helloworld.Repeated_string.content)
}
 void Repeated_string::set_content(int index, const char* value, size_t size) {
  content_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:helloworld.Repeated_string.content)
}
 ::std::string* Repeated_string::add_content() {
  return content_.Add();
}
 void Repeated_string::add_content(const ::std::string& value) {
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:helloworld.Repeated_string.content)
}
 void Repeated_string::add_content(const char* value) {
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:helloworld.Repeated_string.content)
}
 void Repeated_string::add_content(const char* value, size_t size) {
  content_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:helloworld.Repeated_string.content)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Repeated_string::content() const {
  // @@protoc_insertion_point(field_list:helloworld.Repeated_string.content)
  return content_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Repeated_string::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:helloworld.Repeated_string.content)
  return &content_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int User_detail::kUsernameFieldNumber;
const int User_detail::kEmailFieldNumber;
const int User_detail::kFriendsFieldNumber;
#endif  // !_MSC_VER

User_detail::User_detail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.User_detail)
}

void User_detail::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

User_detail::User_detail(const User_detail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.User_detail)
}

void User_detail::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

User_detail::~User_detail() {
  // @@protoc_insertion_point(destructor:helloworld.User_detail)
  SharedDtor();
}

void User_detail::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void User_detail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* User_detail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return User_detail_descriptor_;
}

const User_detail& User_detail::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

User_detail* User_detail::default_instance_ = NULL;

User_detail* User_detail::New(::google::protobuf::Arena* arena) const {
  User_detail* n = new User_detail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void User_detail::Clear() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friends_.Clear();
}

bool User_detail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.User_detail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string username = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.User_detail.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_email;
        break;
      }

      // optional string email = 2;
      case 2: {
        if (tag == 18) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.User_detail.email");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_friends;
        break;
      }

      // repeated string friends = 3;
      case 3: {
        if (tag == 26) {
         parse_friends:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_friends()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->friends(this->friends_size() - 1).data(),
            this->friends(this->friends_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.User_detail.friends");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_friends;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.User_detail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.User_detail)
  return false;
#undef DO_
}

void User_detail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.User_detail)
  // optional string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.User_detail.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string email = 2;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.User_detail.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email(), output);
  }

  // repeated string friends = 3;
  for (int i = 0; i < this->friends_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->friends(i).data(), this->friends(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "helloworld.User_detail.friends");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->friends(i), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.User_detail)
}

::google::protobuf::uint8* User_detail::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.User_detail)
  // optional string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.User_detail.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string email = 2;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.User_detail.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email(), target);
  }

  // repeated string friends = 3;
  for (int i = 0; i < this->friends_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->friends(i).data(), this->friends(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.User_detail.friends");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->friends(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.User_detail)
  return target;
}

int User_detail::ByteSize() const {
  int total_size = 0;

  // optional string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional string email = 2;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // repeated string friends = 3;
  total_size += 1 * this->friends_size();
  for (int i = 0; i < this->friends_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->friends(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void User_detail::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const User_detail* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const User_detail>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void User_detail::MergeFrom(const User_detail& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  friends_.MergeFrom(from.friends_);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
}

void User_detail::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User_detail::CopyFrom(const User_detail& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User_detail::IsInitialized() const {

  return true;
}

void User_detail::Swap(User_detail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User_detail::InternalSwap(User_detail* other) {
  username_.Swap(&other->username_);
  email_.Swap(&other->email_);
  friends_.UnsafeArenaSwap(&other->friends_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata User_detail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = User_detail_descriptor_;
  metadata.reflection = User_detail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// User_detail

// optional string username = 1;
void User_detail::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& User_detail::username() const {
  // @@protoc_insertion_point(field_get:helloworld.User_detail.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User_detail::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.User_detail.username)
}
 void User_detail::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.User_detail.username)
}
 void User_detail::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.User_detail.username)
}
 ::std::string* User_detail::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.User_detail.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* User_detail::release_username() {
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User_detail::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:helloworld.User_detail.username)
}

// optional string email = 2;
void User_detail::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& User_detail::email() const {
  // @@protoc_insertion_point(field_get:helloworld.User_detail.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User_detail::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.User_detail.email)
}
 void User_detail::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.User_detail.email)
}
 void User_detail::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.User_detail.email)
}
 ::std::string* User_detail::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.User_detail.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* User_detail::release_email() {
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void User_detail::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:helloworld.User_detail.email)
}

// repeated string friends = 3;
int User_detail::friends_size() const {
  return friends_.size();
}
void User_detail::clear_friends() {
  friends_.Clear();
}
 const ::std::string& User_detail::friends(int index) const {
  // @@protoc_insertion_point(field_get:helloworld.User_detail.friends)
  return friends_.Get(index);
}
 ::std::string* User_detail::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:helloworld.User_detail.friends)
  return friends_.Mutable(index);
}
 void User_detail::set_friends(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:helloworld.User_detail.friends)
  friends_.Mutable(index)->assign(value);
}
 void User_detail::set_friends(int index, const char* value) {
  friends_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:helloworld.User_detail.friends)
}
 void User_detail::set_friends(int index, const char* value, size_t size) {
  friends_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:helloworld.User_detail.friends)
}
 ::std::string* User_detail::add_friends() {
  return friends_.Add();
}
 void User_detail::add_friends(const ::std::string& value) {
  friends_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:helloworld.User_detail.friends)
}
 void User_detail::add_friends(const char* value) {
  friends_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:helloworld.User_detail.friends)
}
 void User_detail::add_friends(const char* value, size_t size) {
  friends_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:helloworld.User_detail.friends)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
User_detail::friends() const {
  // @@protoc_insertion_point(field_list:helloworld.User_detail.friends)
  return friends_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
User_detail::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:helloworld.User_detail.friends)
  return &friends_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Share_inf::kCreaterFieldNumber;
const int Share_inf::kAmountFieldNumber;
const int Share_inf::kTypeFieldNumber;
const int Share_inf::kPaidByFieldNumber;
const int Share_inf::kDataFieldNumber;
const int Share_inf::kNoteFieldNumber;
const int Share_inf::kImageFieldNumber;
const int Share_inf::kMembersFieldNumber;
const int Share_inf::kMembersCountFieldNumber;
const int Share_inf::kBillIdFieldNumber;
const int Share_inf::kPaidStatusFieldNumber;
#endif  // !_MSC_VER

Share_inf::Share_inf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.Share_inf)
}

void Share_inf::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Share_inf::Share_inf(const Share_inf& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.Share_inf)
}

void Share_inf::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  creater_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paidby_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  members_count_ = 0;
  bill_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paidstatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Share_inf::~Share_inf() {
  // @@protoc_insertion_point(destructor:helloworld.Share_inf)
  SharedDtor();
}

void Share_inf::SharedDtor() {
  creater_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paidby_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bill_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paidstatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Share_inf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Share_inf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Share_inf_descriptor_;
}

const Share_inf& Share_inf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

Share_inf* Share_inf::default_instance_ = NULL;

Share_inf* Share_inf::New(::google::protobuf::Arena* arena) const {
  Share_inf* n = new Share_inf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Share_inf::Clear() {
  creater_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paidby_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  note_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  members_count_ = 0;
  bill_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paidstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  members_.Clear();
}

bool Share_inf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.Share_inf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string creater = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_creater()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->creater().data(), this->creater().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Share_inf.creater");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_amount;
        break;
      }

      // optional string amount = 2;
      case 2: {
        if (tag == 18) {
         parse_amount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->amount().data(), this->amount().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Share_inf.amount");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_type;
        break;
      }

      // optional string type = 3;
      case 3: {
        if (tag == 26) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Share_inf.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_paidBy;
        break;
      }

      // optional string paidBy = 4;
      case 4: {
        if (tag == 34) {
         parse_paidBy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_paidby()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->paidby().data(), this->paidby().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Share_inf.paidBy");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_data;
        break;
      }

      // optional string data = 5;
      case 5: {
        if (tag == 42) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->data().data(), this->data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Share_inf.data");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_note;
        break;
      }

      // optional string note = 6;
      case 6: {
        if (tag == 50) {
         parse_note:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_note()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->note().data(), this->note().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Share_inf.note");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_image;
        break;
      }

      // optional string image = 7;
      case 7: {
        if (tag == 58) {
         parse_image:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->image().data(), this->image().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Share_inf.image");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_members;
        break;
      }

      // repeated string members = 8;
      case 8: {
        if (tag == 66) {
         parse_members:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_members()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->members(this->members_size() - 1).data(),
            this->members(this->members_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Share_inf.members");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_members;
        if (input->ExpectTag(72)) goto parse_members_count;
        break;
      }

      // optional int32 members_count = 9;
      case 9: {
        if (tag == 72) {
         parse_members_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &members_count_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_bill_id;
        break;
      }

      // optional string bill_id = 10;
      case 10: {
        if (tag == 82) {
         parse_bill_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bill_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bill_id().data(), this->bill_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Share_inf.bill_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_paidStatus;
        break;
      }

      // optional string paidStatus = 11;
      case 11: {
        if (tag == 90) {
         parse_paidStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_paidstatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->paidstatus().data(), this->paidstatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Share_inf.paidStatus");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.Share_inf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.Share_inf)
  return false;
#undef DO_
}

void Share_inf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.Share_inf)
  // optional string creater = 1;
  if (this->creater().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creater().data(), this->creater().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.creater");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->creater(), output);
  }

  // optional string amount = 2;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->amount().data(), this->amount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.amount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->amount(), output);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // optional string paidBy = 4;
  if (this->paidby().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->paidby().data(), this->paidby().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.paidBy");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->paidby(), output);
  }

  // optional string data = 5;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->data(), output);
  }

  // optional string note = 6;
  if (this->note().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->note().data(), this->note().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.note");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->note(), output);
  }

  // optional string image = 7;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->image().data(), this->image().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.image");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->image(), output);
  }

  // repeated string members = 8;
  for (int i = 0; i < this->members_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->members(i).data(), this->members(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "helloworld.Share_inf.members");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->members(i), output);
  }

  // optional int32 members_count = 9;
  if (this->members_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->members_count(), output);
  }

  // optional string bill_id = 10;
  if (this->bill_id().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bill_id().data(), this->bill_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.bill_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->bill_id(), output);
  }

  // optional string paidStatus = 11;
  if (this->paidstatus().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->paidstatus().data(), this->paidstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.paidStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->paidstatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.Share_inf)
}

::google::protobuf::uint8* Share_inf::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.Share_inf)
  // optional string creater = 1;
  if (this->creater().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->creater().data(), this->creater().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.creater");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->creater(), target);
  }

  // optional string amount = 2;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->amount().data(), this->amount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.amount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->amount(), target);
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // optional string paidBy = 4;
  if (this->paidby().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->paidby().data(), this->paidby().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.paidBy");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->paidby(), target);
  }

  // optional string data = 5;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->data().data(), this->data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->data(), target);
  }

  // optional string note = 6;
  if (this->note().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->note().data(), this->note().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.note");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->note(), target);
  }

  // optional string image = 7;
  if (this->image().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->image().data(), this->image().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.image");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->image(), target);
  }

  // repeated string members = 8;
  for (int i = 0; i < this->members_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->members(i).data(), this->members(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.members");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->members(i), target);
  }

  // optional int32 members_count = 9;
  if (this->members_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->members_count(), target);
  }

  // optional string bill_id = 10;
  if (this->bill_id().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bill_id().data(), this->bill_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.bill_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->bill_id(), target);
  }

  // optional string paidStatus = 11;
  if (this->paidstatus().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->paidstatus().data(), this->paidstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Share_inf.paidStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->paidstatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.Share_inf)
  return target;
}

int Share_inf::ByteSize() const {
  int total_size = 0;

  // optional string creater = 1;
  if (this->creater().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->creater());
  }

  // optional string amount = 2;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->amount());
  }

  // optional string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // optional string paidBy = 4;
  if (this->paidby().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->paidby());
  }

  // optional string data = 5;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data());
  }

  // optional string note = 6;
  if (this->note().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->note());
  }

  // optional string image = 7;
  if (this->image().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image());
  }

  // optional int32 members_count = 9;
  if (this->members_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->members_count());
  }

  // optional string bill_id = 10;
  if (this->bill_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bill_id());
  }

  // optional string paidStatus = 11;
  if (this->paidstatus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->paidstatus());
  }

  // repeated string members = 8;
  total_size += 1 * this->members_size();
  for (int i = 0; i < this->members_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->members(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Share_inf::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Share_inf* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Share_inf>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Share_inf::MergeFrom(const Share_inf& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  members_.MergeFrom(from.members_);
  if (from.creater().size() > 0) {

    creater_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.creater_);
  }
  if (from.amount().size() > 0) {

    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.paidby().size() > 0) {

    paidby_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paidby_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.note().size() > 0) {

    note_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.note_);
  }
  if (from.image().size() > 0) {

    image_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_);
  }
  if (from.members_count() != 0) {
    set_members_count(from.members_count());
  }
  if (from.bill_id().size() > 0) {

    bill_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bill_id_);
  }
  if (from.paidstatus().size() > 0) {

    paidstatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paidstatus_);
  }
}

void Share_inf::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Share_inf::CopyFrom(const Share_inf& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Share_inf::IsInitialized() const {

  return true;
}

void Share_inf::Swap(Share_inf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Share_inf::InternalSwap(Share_inf* other) {
  creater_.Swap(&other->creater_);
  amount_.Swap(&other->amount_);
  type_.Swap(&other->type_);
  paidby_.Swap(&other->paidby_);
  data_.Swap(&other->data_);
  note_.Swap(&other->note_);
  image_.Swap(&other->image_);
  members_.UnsafeArenaSwap(&other->members_);
  std::swap(members_count_, other->members_count_);
  bill_id_.Swap(&other->bill_id_);
  paidstatus_.Swap(&other->paidstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Share_inf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Share_inf_descriptor_;
  metadata.reflection = Share_inf_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Share_inf

// optional string creater = 1;
void Share_inf::clear_creater() {
  creater_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Share_inf::creater() const {
  // @@protoc_insertion_point(field_get:helloworld.Share_inf.creater)
  return creater_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_creater(const ::std::string& value) {
  
  creater_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Share_inf.creater)
}
 void Share_inf::set_creater(const char* value) {
  
  creater_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Share_inf.creater)
}
 void Share_inf::set_creater(const char* value, size_t size) {
  
  creater_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Share_inf.creater)
}
 ::std::string* Share_inf::mutable_creater() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Share_inf.creater)
  return creater_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Share_inf::release_creater() {
  
  return creater_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_allocated_creater(::std::string* creater) {
  if (creater != NULL) {
    
  } else {
    
  }
  creater_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creater);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Share_inf.creater)
}

// optional string amount = 2;
void Share_inf::clear_amount() {
  amount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Share_inf::amount() const {
  // @@protoc_insertion_point(field_get:helloworld.Share_inf.amount)
  return amount_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_amount(const ::std::string& value) {
  
  amount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Share_inf.amount)
}
 void Share_inf::set_amount(const char* value) {
  
  amount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Share_inf.amount)
}
 void Share_inf::set_amount(const char* value, size_t size) {
  
  amount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Share_inf.amount)
}
 ::std::string* Share_inf::mutable_amount() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Share_inf.amount)
  return amount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Share_inf::release_amount() {
  
  return amount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_allocated_amount(::std::string* amount) {
  if (amount != NULL) {
    
  } else {
    
  }
  amount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), amount);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Share_inf.amount)
}

// optional string type = 3;
void Share_inf::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Share_inf::type() const {
  // @@protoc_insertion_point(field_get:helloworld.Share_inf.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Share_inf.type)
}
 void Share_inf::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Share_inf.type)
}
 void Share_inf::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Share_inf.type)
}
 ::std::string* Share_inf::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Share_inf.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Share_inf::release_type() {
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Share_inf.type)
}

// optional string paidBy = 4;
void Share_inf::clear_paidby() {
  paidby_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Share_inf::paidby() const {
  // @@protoc_insertion_point(field_get:helloworld.Share_inf.paidBy)
  return paidby_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_paidby(const ::std::string& value) {
  
  paidby_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Share_inf.paidBy)
}
 void Share_inf::set_paidby(const char* value) {
  
  paidby_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Share_inf.paidBy)
}
 void Share_inf::set_paidby(const char* value, size_t size) {
  
  paidby_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Share_inf.paidBy)
}
 ::std::string* Share_inf::mutable_paidby() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Share_inf.paidBy)
  return paidby_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Share_inf::release_paidby() {
  
  return paidby_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_allocated_paidby(::std::string* paidby) {
  if (paidby != NULL) {
    
  } else {
    
  }
  paidby_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), paidby);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Share_inf.paidBy)
}

// optional string data = 5;
void Share_inf::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Share_inf::data() const {
  // @@protoc_insertion_point(field_get:helloworld.Share_inf.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Share_inf.data)
}
 void Share_inf::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Share_inf.data)
}
 void Share_inf::set_data(const char* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Share_inf.data)
}
 ::std::string* Share_inf::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Share_inf.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Share_inf::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Share_inf.data)
}

// optional string note = 6;
void Share_inf::clear_note() {
  note_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Share_inf::note() const {
  // @@protoc_insertion_point(field_get:helloworld.Share_inf.note)
  return note_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_note(const ::std::string& value) {
  
  note_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Share_inf.note)
}
 void Share_inf::set_note(const char* value) {
  
  note_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Share_inf.note)
}
 void Share_inf::set_note(const char* value, size_t size) {
  
  note_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Share_inf.note)
}
 ::std::string* Share_inf::mutable_note() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Share_inf.note)
  return note_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Share_inf::release_note() {
  
  return note_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_allocated_note(::std::string* note) {
  if (note != NULL) {
    
  } else {
    
  }
  note_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), note);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Share_inf.note)
}

// optional string image = 7;
void Share_inf::clear_image() {
  image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Share_inf::image() const {
  // @@protoc_insertion_point(field_get:helloworld.Share_inf.image)
  return image_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_image(const ::std::string& value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Share_inf.image)
}
 void Share_inf::set_image(const char* value) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Share_inf.image)
}
 void Share_inf::set_image(const char* value, size_t size) {
  
  image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Share_inf.image)
}
 ::std::string* Share_inf::mutable_image() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Share_inf.image)
  return image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Share_inf::release_image() {
  
  return image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_allocated_image(::std::string* image) {
  if (image != NULL) {
    
  } else {
    
  }
  image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), image);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Share_inf.image)
}

// repeated string members = 8;
int Share_inf::members_size() const {
  return members_.size();
}
void Share_inf::clear_members() {
  members_.Clear();
}
 const ::std::string& Share_inf::members(int index) const {
  // @@protoc_insertion_point(field_get:helloworld.Share_inf.members)
  return members_.Get(index);
}
 ::std::string* Share_inf::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:helloworld.Share_inf.members)
  return members_.Mutable(index);
}
 void Share_inf::set_members(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:helloworld.Share_inf.members)
  members_.Mutable(index)->assign(value);
}
 void Share_inf::set_members(int index, const char* value) {
  members_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:helloworld.Share_inf.members)
}
 void Share_inf::set_members(int index, const char* value, size_t size) {
  members_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:helloworld.Share_inf.members)
}
 ::std::string* Share_inf::add_members() {
  return members_.Add();
}
 void Share_inf::add_members(const ::std::string& value) {
  members_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:helloworld.Share_inf.members)
}
 void Share_inf::add_members(const char* value) {
  members_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:helloworld.Share_inf.members)
}
 void Share_inf::add_members(const char* value, size_t size) {
  members_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:helloworld.Share_inf.members)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
Share_inf::members() const {
  // @@protoc_insertion_point(field_list:helloworld.Share_inf.members)
  return members_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
Share_inf::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:helloworld.Share_inf.members)
  return &members_;
}

// optional int32 members_count = 9;
void Share_inf::clear_members_count() {
  members_count_ = 0;
}
 ::google::protobuf::int32 Share_inf::members_count() const {
  // @@protoc_insertion_point(field_get:helloworld.Share_inf.members_count)
  return members_count_;
}
 void Share_inf::set_members_count(::google::protobuf::int32 value) {
  
  members_count_ = value;
  // @@protoc_insertion_point(field_set:helloworld.Share_inf.members_count)
}

// optional string bill_id = 10;
void Share_inf::clear_bill_id() {
  bill_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Share_inf::bill_id() const {
  // @@protoc_insertion_point(field_get:helloworld.Share_inf.bill_id)
  return bill_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_bill_id(const ::std::string& value) {
  
  bill_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Share_inf.bill_id)
}
 void Share_inf::set_bill_id(const char* value) {
  
  bill_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Share_inf.bill_id)
}
 void Share_inf::set_bill_id(const char* value, size_t size) {
  
  bill_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Share_inf.bill_id)
}
 ::std::string* Share_inf::mutable_bill_id() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Share_inf.bill_id)
  return bill_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Share_inf::release_bill_id() {
  
  return bill_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_allocated_bill_id(::std::string* bill_id) {
  if (bill_id != NULL) {
    
  } else {
    
  }
  bill_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bill_id);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Share_inf.bill_id)
}

// optional string paidStatus = 11;
void Share_inf::clear_paidstatus() {
  paidstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Share_inf::paidstatus() const {
  // @@protoc_insertion_point(field_get:helloworld.Share_inf.paidStatus)
  return paidstatus_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_paidstatus(const ::std::string& value) {
  
  paidstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Share_inf.paidStatus)
}
 void Share_inf::set_paidstatus(const char* value) {
  
  paidstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Share_inf.paidStatus)
}
 void Share_inf::set_paidstatus(const char* value, size_t size) {
  
  paidstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Share_inf.paidStatus)
}
 ::std::string* Share_inf::mutable_paidstatus() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Share_inf.paidStatus)
  return paidstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Share_inf::release_paidstatus() {
  
  return paidstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Share_inf::set_allocated_paidstatus(::std::string* paidstatus) {
  if (paidstatus != NULL) {
    
  } else {
    
  }
  paidstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), paidstatus);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Share_inf.paidStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Bill_request::kUsernameFieldNumber;
const int Bill_request::kStartFieldNumber;
const int Bill_request::kAmountFieldNumber;
#endif  // !_MSC_VER

Bill_request::Bill_request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.Bill_request)
}

void Bill_request::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Bill_request::Bill_request(const Bill_request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.Bill_request)
}

void Bill_request::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Bill_request::~Bill_request() {
  // @@protoc_insertion_point(destructor:helloworld.Bill_request)
  SharedDtor();
}

void Bill_request::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Bill_request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bill_request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Bill_request_descriptor_;
}

const Bill_request& Bill_request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

Bill_request* Bill_request::default_instance_ = NULL;

Bill_request* Bill_request::New(::google::protobuf::Arena* arena) const {
  Bill_request* n = new Bill_request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bill_request::Clear() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Bill_request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.Bill_request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string username = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Bill_request.username");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_start;
        break;
      }

      // optional string start = 2;
      case 2: {
        if (tag == 18) {
         parse_start:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->start().data(), this->start().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Bill_request.start");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_amount;
        break;
      }

      // optional string amount = 3;
      case 3: {
        if (tag == 26) {
         parse_amount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->amount().data(), this->amount().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Bill_request.amount");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.Bill_request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.Bill_request)
  return false;
#undef DO_
}

void Bill_request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.Bill_request)
  // optional string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Bill_request.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string start = 2;
  if (this->start().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->start().data(), this->start().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Bill_request.start");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->start(), output);
  }

  // optional string amount = 3;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->amount().data(), this->amount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Bill_request.amount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->amount(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.Bill_request)
}

::google::protobuf::uint8* Bill_request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.Bill_request)
  // optional string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Bill_request.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string start = 2;
  if (this->start().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->start().data(), this->start().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Bill_request.start");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->start(), target);
  }

  // optional string amount = 3;
  if (this->amount().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->amount().data(), this->amount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Bill_request.amount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->amount(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.Bill_request)
  return target;
}

int Bill_request::ByteSize() const {
  int total_size = 0;

  // optional string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // optional string start = 2;
  if (this->start().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start());
  }

  // optional string amount = 3;
  if (this->amount().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->amount());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bill_request::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Bill_request* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Bill_request>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Bill_request::MergeFrom(const Bill_request& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.start().size() > 0) {

    start_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_);
  }
  if (from.amount().size() > 0) {

    amount_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.amount_);
  }
}

void Bill_request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bill_request::CopyFrom(const Bill_request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bill_request::IsInitialized() const {

  return true;
}

void Bill_request::Swap(Bill_request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bill_request::InternalSwap(Bill_request* other) {
  username_.Swap(&other->username_);
  start_.Swap(&other->start_);
  amount_.Swap(&other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bill_request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Bill_request_descriptor_;
  metadata.reflection = Bill_request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bill_request

// optional string username = 1;
void Bill_request::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Bill_request::username() const {
  // @@protoc_insertion_point(field_get:helloworld.Bill_request.username)
  return username_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Bill_request::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Bill_request.username)
}
 void Bill_request::set_username(const char* value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Bill_request.username)
}
 void Bill_request::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Bill_request.username)
}
 ::std::string* Bill_request::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Bill_request.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Bill_request::release_username() {
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Bill_request::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Bill_request.username)
}

// optional string start = 2;
void Bill_request::clear_start() {
  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Bill_request::start() const {
  // @@protoc_insertion_point(field_get:helloworld.Bill_request.start)
  return start_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Bill_request::set_start(const ::std::string& value) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Bill_request.start)
}
 void Bill_request::set_start(const char* value) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Bill_request.start)
}
 void Bill_request::set_start(const char* value, size_t size) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Bill_request.start)
}
 ::std::string* Bill_request::mutable_start() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Bill_request.start)
  return start_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Bill_request::release_start() {
  
  return start_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Bill_request::set_allocated_start(::std::string* start) {
  if (start != NULL) {
    
  } else {
    
  }
  start_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Bill_request.start)
}

// optional string amount = 3;
void Bill_request::clear_amount() {
  amount_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Bill_request::amount() const {
  // @@protoc_insertion_point(field_get:helloworld.Bill_request.amount)
  return amount_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Bill_request::set_amount(const ::std::string& value) {
  
  amount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Bill_request.amount)
}
 void Bill_request::set_amount(const char* value) {
  
  amount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Bill_request.amount)
}
 void Bill_request::set_amount(const char* value, size_t size) {
  
  amount_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Bill_request.amount)
}
 ::std::string* Bill_request::mutable_amount() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Bill_request.amount)
  return amount_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Bill_request::release_amount() {
  
  return amount_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Bill_request::set_allocated_amount(::std::string* amount) {
  if (amount != NULL) {
    
  } else {
    
  }
  amount_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), amount);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Bill_request.amount)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Syn_data::kFriendFieldNumber;
const int Syn_data::kBillFieldNumber;
const int Syn_data::kDeleteFieldNumber;
const int Syn_data::kRequestFieldNumber;
#endif  // !_MSC_VER

Syn_data::Syn_data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.Syn_data)
}

void Syn_data::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Syn_data::Syn_data(const Syn_data& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.Syn_data)
}

void Syn_data::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  friend__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bill_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delete__.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Syn_data::~Syn_data() {
  // @@protoc_insertion_point(destructor:helloworld.Syn_data)
  SharedDtor();
}

void Syn_data::SharedDtor() {
  friend__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bill_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delete__.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Syn_data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Syn_data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Syn_data_descriptor_;
}

const Syn_data& Syn_data::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

Syn_data* Syn_data::default_instance_ = NULL;

Syn_data* Syn_data::New(::google::protobuf::Arena* arena) const {
  Syn_data* n = new Syn_data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Syn_data::Clear() {
  friend__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bill_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  delete__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Syn_data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.Syn_data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string friend = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friend_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->friend_().data(), this->friend_().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Syn_data.friend");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_bill;
        break;
      }

      // optional string bill = 2;
      case 2: {
        if (tag == 18) {
         parse_bill:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bill()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bill().data(), this->bill().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Syn_data.bill");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_delete;
        break;
      }

      // optional string delete = 3;
      case 3: {
        if (tag == 26) {
         parse_delete:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_delete_()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->delete_().data(), this->delete_().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Syn_data.delete");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_request;
        break;
      }

      // optional string request = 4;
      case 4: {
        if (tag == 34) {
         parse_request:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->request().data(), this->request().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Syn_data.request");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.Syn_data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.Syn_data)
  return false;
#undef DO_
}

void Syn_data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.Syn_data)
  // optional string friend = 1;
  if (this->friend_().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->friend_().data(), this->friend_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Syn_data.friend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->friend_(), output);
  }

  // optional string bill = 2;
  if (this->bill().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bill().data(), this->bill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Syn_data.bill");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bill(), output);
  }

  // optional string delete = 3;
  if (this->delete_().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->delete_().data(), this->delete_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Syn_data.delete");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->delete_(), output);
  }

  // optional string request = 4;
  if (this->request().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request().data(), this->request().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Syn_data.request");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->request(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.Syn_data)
}

::google::protobuf::uint8* Syn_data::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.Syn_data)
  // optional string friend = 1;
  if (this->friend_().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->friend_().data(), this->friend_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Syn_data.friend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->friend_(), target);
  }

  // optional string bill = 2;
  if (this->bill().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bill().data(), this->bill().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Syn_data.bill");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bill(), target);
  }

  // optional string delete = 3;
  if (this->delete_().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->delete_().data(), this->delete_().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Syn_data.delete");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->delete_(), target);
  }

  // optional string request = 4;
  if (this->request().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request().data(), this->request().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Syn_data.request");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->request(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.Syn_data)
  return target;
}

int Syn_data::ByteSize() const {
  int total_size = 0;

  // optional string friend = 1;
  if (this->friend_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friend_());
  }

  // optional string bill = 2;
  if (this->bill().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bill());
  }

  // optional string delete = 3;
  if (this->delete_().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->delete_());
  }

  // optional string request = 4;
  if (this->request().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Syn_data::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Syn_data* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Syn_data>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Syn_data::MergeFrom(const Syn_data& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.friend_().size() > 0) {

    friend__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friend__);
  }
  if (from.bill().size() > 0) {

    bill_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bill_);
  }
  if (from.delete_().size() > 0) {

    delete__.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.delete__);
  }
  if (from.request().size() > 0) {

    request_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_);
  }
}

void Syn_data::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Syn_data::CopyFrom(const Syn_data& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Syn_data::IsInitialized() const {

  return true;
}

void Syn_data::Swap(Syn_data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Syn_data::InternalSwap(Syn_data* other) {
  friend__.Swap(&other->friend__);
  bill_.Swap(&other->bill_);
  delete__.Swap(&other->delete__);
  request_.Swap(&other->request_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Syn_data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Syn_data_descriptor_;
  metadata.reflection = Syn_data_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Syn_data

// optional string friend = 1;
void Syn_data::clear_friend_() {
  friend__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Syn_data::friend_() const {
  // @@protoc_insertion_point(field_get:helloworld.Syn_data.friend)
  return friend__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Syn_data::set_friend_(const ::std::string& value) {
  
  friend__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Syn_data.friend)
}
 void Syn_data::set_friend_(const char* value) {
  
  friend__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Syn_data.friend)
}
 void Syn_data::set_friend_(const char* value, size_t size) {
  
  friend__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Syn_data.friend)
}
 ::std::string* Syn_data::mutable_friend_() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Syn_data.friend)
  return friend__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Syn_data::release_friend_() {
  
  return friend__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Syn_data::set_allocated_friend_(::std::string* friend_) {
  if (friend_ != NULL) {
    
  } else {
    
  }
  friend__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friend_);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Syn_data.friend)
}

// optional string bill = 2;
void Syn_data::clear_bill() {
  bill_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Syn_data::bill() const {
  // @@protoc_insertion_point(field_get:helloworld.Syn_data.bill)
  return bill_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Syn_data::set_bill(const ::std::string& value) {
  
  bill_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Syn_data.bill)
}
 void Syn_data::set_bill(const char* value) {
  
  bill_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Syn_data.bill)
}
 void Syn_data::set_bill(const char* value, size_t size) {
  
  bill_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Syn_data.bill)
}
 ::std::string* Syn_data::mutable_bill() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Syn_data.bill)
  return bill_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Syn_data::release_bill() {
  
  return bill_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Syn_data::set_allocated_bill(::std::string* bill) {
  if (bill != NULL) {
    
  } else {
    
  }
  bill_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bill);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Syn_data.bill)
}

// optional string delete = 3;
void Syn_data::clear_delete_() {
  delete__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Syn_data::delete_() const {
  // @@protoc_insertion_point(field_get:helloworld.Syn_data.delete)
  return delete__.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Syn_data::set_delete_(const ::std::string& value) {
  
  delete__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Syn_data.delete)
}
 void Syn_data::set_delete_(const char* value) {
  
  delete__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Syn_data.delete)
}
 void Syn_data::set_delete_(const char* value, size_t size) {
  
  delete__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Syn_data.delete)
}
 ::std::string* Syn_data::mutable_delete_() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Syn_data.delete)
  return delete__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Syn_data::release_delete_() {
  
  return delete__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Syn_data::set_allocated_delete_(::std::string* delete_) {
  if (delete_ != NULL) {
    
  } else {
    
  }
  delete__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), delete_);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Syn_data.delete)
}

// optional string request = 4;
void Syn_data::clear_request() {
  request_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Syn_data::request() const {
  // @@protoc_insertion_point(field_get:helloworld.Syn_data.request)
  return request_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Syn_data::set_request(const ::std::string& value) {
  
  request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Syn_data.request)
}
 void Syn_data::set_request(const char* value) {
  
  request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Syn_data.request)
}
 void Syn_data::set_request(const char* value, size_t size) {
  
  request_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Syn_data.request)
}
 ::std::string* Syn_data::mutable_request() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Syn_data.request)
  return request_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Syn_data::release_request() {
  
  return request_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Syn_data::set_allocated_request(::std::string* request) {
  if (request != NULL) {
    
  } else {
    
  }
  request_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Syn_data.request)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int HelloRequest::kNameFieldNumber;
#endif  // !_MSC_VER

HelloRequest::HelloRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.HelloRequest)
}

void HelloRequest::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HelloRequest::HelloRequest(const HelloRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.HelloRequest)
}

void HelloRequest::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HelloRequest::~HelloRequest() {
  // @@protoc_insertion_point(destructor:helloworld.HelloRequest)
  SharedDtor();
}

void HelloRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HelloRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HelloRequest_descriptor_;
}

const HelloRequest& HelloRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

HelloRequest* HelloRequest::default_instance_ = NULL;

HelloRequest* HelloRequest::New(::google::protobuf::Arena* arena) const {
  HelloRequest* n = new HelloRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HelloRequest::Clear() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HelloRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.HelloRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.HelloRequest.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.HelloRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.HelloRequest)
  return false;
#undef DO_
}

void HelloRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.HelloRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.HelloRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.HelloRequest)
}

::google::protobuf::uint8* HelloRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.HelloRequest)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.HelloRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.HelloRequest)
  return target;
}

int HelloRequest::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloRequest::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HelloRequest* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloRequest>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HelloRequest::MergeFrom(const HelloRequest& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void HelloRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloRequest::CopyFrom(const HelloRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloRequest::IsInitialized() const {

  return true;
}

void HelloRequest::Swap(HelloRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloRequest::InternalSwap(HelloRequest* other) {
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HelloRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HelloRequest_descriptor_;
  metadata.reflection = HelloRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloRequest

// optional string name = 1;
void HelloRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HelloRequest::name() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloRequest.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HelloRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.HelloRequest.name)
}
 void HelloRequest::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.HelloRequest.name)
}
 void HelloRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloRequest.name)
}
 ::std::string* HelloRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.HelloRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HelloRequest::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HelloRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloRequest.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int HelloReply::kMessageFieldNumber;
#endif  // !_MSC_VER

HelloReply::HelloReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.HelloReply)
}

void HelloReply::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

HelloReply::HelloReply(const HelloReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.HelloReply)
}

void HelloReply::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

HelloReply::~HelloReply() {
  // @@protoc_insertion_point(destructor:helloworld.HelloReply)
  SharedDtor();
}

void HelloReply::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void HelloReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HelloReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HelloReply_descriptor_;
}

const HelloReply& HelloReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

HelloReply* HelloReply::default_instance_ = NULL;

HelloReply* HelloReply::New(::google::protobuf::Arena* arena) const {
  HelloReply* n = new HelloReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HelloReply::Clear() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool HelloReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.HelloReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.HelloReply.message");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.HelloReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.HelloReply)
  return false;
#undef DO_
}

void HelloReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.HelloReply)
  // optional string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.HelloReply.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.HelloReply)
}

::google::protobuf::uint8* HelloReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.HelloReply)
  // optional string message = 1;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.HelloReply.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.HelloReply)
  return target;
}

int HelloReply::ByteSize() const {
  int total_size = 0;

  // optional string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HelloReply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HelloReply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HelloReply>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HelloReply::MergeFrom(const HelloReply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void HelloReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloReply::CopyFrom(const HelloReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloReply::IsInitialized() const {

  return true;
}

void HelloReply::Swap(HelloReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HelloReply::InternalSwap(HelloReply* other) {
  message_.Swap(&other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HelloReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HelloReply_descriptor_;
  metadata.reflection = HelloReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HelloReply

// optional string message = 1;
void HelloReply::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& HelloReply::message() const {
  // @@protoc_insertion_point(field_get:helloworld.HelloReply.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HelloReply::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.HelloReply.message)
}
 void HelloReply::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.HelloReply.message)
}
 void HelloReply::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.HelloReply.message)
}
 ::std::string* HelloReply::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.HelloReply.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HelloReply::release_message() {
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HelloReply::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:helloworld.HelloReply.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Image::kNameFieldNumber;
const int Image::kDataFieldNumber;
#endif  // !_MSC_VER

Image::Image()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.Image)
}

void Image::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Image::Image(const Image& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.Image)
}

void Image::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Image::~Image() {
  // @@protoc_insertion_point(destructor:helloworld.Image)
  SharedDtor();
}

void Image::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Image::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Image::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Image_descriptor_;
}

const Image& Image::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

Image* Image::default_instance_ = NULL;

Image* Image::New(::google::protobuf::Arena* arena) const {
  Image* n = new Image;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Image::Clear() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.Image)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Image.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_data;
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (tag == 18) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.Image)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.Image)
  return false;
#undef DO_
}

void Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.Image)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Image.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.Image)
}

::google::protobuf::uint8* Image::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.Image)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Image.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.Image)
  return target;
}

int Image::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Image::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Image* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Image>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Image::MergeFrom(const Image& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
}

void Image::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Image::CopyFrom(const Image& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Image::IsInitialized() const {

  return true;
}

void Image::Swap(Image* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Image::InternalSwap(Image* other) {
  name_.Swap(&other->name_);
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Image::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Image_descriptor_;
  metadata.reflection = Image_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Image

// optional string name = 1;
void Image::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Image::name() const {
  // @@protoc_insertion_point(field_get:helloworld.Image.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Image::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Image.name)
}
 void Image::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Image.name)
}
 void Image::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Image.name)
}
 ::std::string* Image::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Image.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Image::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Image::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Image.name)
}

// optional bytes data = 2;
void Image::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Image::data() const {
  // @@protoc_insertion_point(field_get:helloworld.Image.data)
  return data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Image::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Image.data)
}
 void Image::set_data(const char* value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Image.data)
}
 void Image::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Image.data)
}
 ::std::string* Image::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Image.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Image::release_data() {
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Image::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Image.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Request::kRequestIdFieldNumber;
const int Request::kSenderFieldNumber;
const int Request::kReceiverFieldNumber;
const int Request::kTypeFieldNumber;
const int Request::kContentFieldNumber;
const int Request::kResponseFieldNumber;
const int Request::kRequestDateFieldNumber;
const int Request::kResponseDateFieldNumber;
const int Request::kIgnoreFromFieldNumber;
const int Request::kIgnoreToFieldNumber;
#endif  // !_MSC_VER

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.Request)
}

void Request::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Request::Request(const Request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.Request)
}

void Request::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ignore_from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ignore_to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:helloworld.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ignore_from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ignore_to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

Request* Request::default_instance_ = NULL;

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  request_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ignore_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ignore_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string request_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Request.request_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sender;
        break;
      }

      // optional string sender = 2;
      case 2: {
        if (tag == 18) {
         parse_sender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender().data(), this->sender().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Request.sender");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_receiver;
        break;
      }

      // optional string receiver = 3;
      case 3: {
        if (tag == 26) {
         parse_receiver:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->receiver().data(), this->receiver().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Request.receiver");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_type;
        break;
      }

      // optional string type = 4;
      case 4: {
        if (tag == 34) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Request.type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_content;
        break;
      }

      // optional string content = 5;
      case 5: {
        if (tag == 42) {
         parse_content:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Request.content");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_response;
        break;
      }

      // optional string response = 6;
      case 6: {
        if (tag == 50) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->response().data(), this->response().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Request.response");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_request_date;
        break;
      }

      // optional string request_date = 7;
      case 7: {
        if (tag == 58) {
         parse_request_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->request_date().data(), this->request_date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Request.request_date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_response_date;
        break;
      }

      // optional string response_date = 8;
      case 8: {
        if (tag == 66) {
         parse_response_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->response_date().data(), this->response_date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Request.response_date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_ignore_from;
        break;
      }

      // optional string ignore_from = 9;
      case 9: {
        if (tag == 74) {
         parse_ignore_from:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ignore_from()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ignore_from().data(), this->ignore_from().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Request.ignore_from");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_ignore_to;
        break;
      }

      // optional string ignore_to = 10;
      case 10: {
        if (tag == 82) {
         parse_ignore_to:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ignore_to()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ignore_to().data(), this->ignore_to().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Request.ignore_to");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.Request)
  // optional string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // optional string sender = 2;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sender(), output);
  }

  // optional string receiver = 3;
  if (this->receiver().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receiver().data(), this->receiver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.receiver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->receiver(), output);
  }

  // optional string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  // optional string content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  // optional string response = 6;
  if (this->response().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response().data(), this->response().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.response");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->response(), output);
  }

  // optional string request_date = 7;
  if (this->request_date().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_date().data(), this->request_date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.request_date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->request_date(), output);
  }

  // optional string response_date = 8;
  if (this->response_date().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response_date().data(), this->response_date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.response_date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->response_date(), output);
  }

  // optional string ignore_from = 9;
  if (this->ignore_from().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ignore_from().data(), this->ignore_from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.ignore_from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->ignore_from(), output);
  }

  // optional string ignore_to = 10;
  if (this->ignore_to().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ignore_to().data(), this->ignore_to().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.ignore_to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->ignore_to(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.Request)
}

::google::protobuf::uint8* Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.Request)
  // optional string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // optional string sender = 2;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sender(), target);
  }

  // optional string receiver = 3;
  if (this->receiver().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receiver().data(), this->receiver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.receiver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->receiver(), target);
  }

  // optional string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  // optional string content = 5;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  // optional string response = 6;
  if (this->response().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response().data(), this->response().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.response");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->response(), target);
  }

  // optional string request_date = 7;
  if (this->request_date().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_date().data(), this->request_date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.request_date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->request_date(), target);
  }

  // optional string response_date = 8;
  if (this->response_date().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response_date().data(), this->response_date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.response_date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->response_date(), target);
  }

  // optional string ignore_from = 9;
  if (this->ignore_from().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ignore_from().data(), this->ignore_from().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.ignore_from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->ignore_from(), target);
  }

  // optional string ignore_to = 10;
  if (this->ignore_to().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ignore_to().data(), this->ignore_to().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Request.ignore_to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->ignore_to(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.Request)
  return target;
}

int Request::ByteSize() const {
  int total_size = 0;

  // optional string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // optional string sender = 2;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  // optional string receiver = 3;
  if (this->receiver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receiver());
  }

  // optional string type = 4;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // optional string content = 5;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  // optional string response = 6;
  if (this->response().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response());
  }

  // optional string request_date = 7;
  if (this->request_date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_date());
  }

  // optional string response_date = 8;
  if (this->response_date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_date());
  }

  // optional string ignore_from = 9;
  if (this->ignore_from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ignore_from());
  }

  // optional string ignore_to = 10;
  if (this->ignore_to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ignore_to());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Request* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.receiver().size() > 0) {

    receiver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.response().size() > 0) {

    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
  if (from.request_date().size() > 0) {

    request_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_date_);
  }
  if (from.response_date().size() > 0) {

    response_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_date_);
  }
  if (from.ignore_from().size() > 0) {

    ignore_from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ignore_from_);
  }
  if (from.ignore_to().size() > 0) {

    ignore_to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ignore_to_);
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {

  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  request_id_.Swap(&other->request_id_);
  sender_.Swap(&other->sender_);
  receiver_.Swap(&other->receiver_);
  type_.Swap(&other->type_);
  content_.Swap(&other->content_);
  response_.Swap(&other->response_);
  request_date_.Swap(&other->request_date_);
  response_date_.Swap(&other->response_date_);
  ignore_from_.Swap(&other->ignore_from_);
  ignore_to_.Swap(&other->ignore_to_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// optional string request_id = 1;
void Request::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Request::request_id() const {
  // @@protoc_insertion_point(field_get:helloworld.Request.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Request.request_id)
}
 void Request::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Request.request_id)
}
 void Request::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Request.request_id)
}
 ::std::string* Request::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Request.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_request_id() {
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Request.request_id)
}

// optional string sender = 2;
void Request::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Request::sender() const {
  // @@protoc_insertion_point(field_get:helloworld.Request.sender)
  return sender_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Request.sender)
}
 void Request::set_sender(const char* value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Request.sender)
}
 void Request::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Request.sender)
}
 ::std::string* Request::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Request.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_sender() {
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Request.sender)
}

// optional string receiver = 3;
void Request::clear_receiver() {
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Request::receiver() const {
  // @@protoc_insertion_point(field_get:helloworld.Request.receiver)
  return receiver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_receiver(const ::std::string& value) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Request.receiver)
}
 void Request::set_receiver(const char* value) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Request.receiver)
}
 void Request::set_receiver(const char* value, size_t size) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Request.receiver)
}
 ::std::string* Request::mutable_receiver() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Request.receiver)
  return receiver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_receiver() {
  
  return receiver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_receiver(::std::string* receiver) {
  if (receiver != NULL) {
    
  } else {
    
  }
  receiver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Request.receiver)
}

// optional string type = 4;
void Request::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Request::type() const {
  // @@protoc_insertion_point(field_get:helloworld.Request.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Request.type)
}
 void Request::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Request.type)
}
 void Request::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Request.type)
}
 ::std::string* Request::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Request.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_type() {
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Request.type)
}

// optional string content = 5;
void Request::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Request::content() const {
  // @@protoc_insertion_point(field_get:helloworld.Request.content)
  return content_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Request.content)
}
 void Request::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Request.content)
}
 void Request::set_content(const char* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Request.content)
}
 ::std::string* Request::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Request.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_content() {
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Request.content)
}

// optional string response = 6;
void Request::clear_response() {
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Request::response() const {
  // @@protoc_insertion_point(field_get:helloworld.Request.response)
  return response_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_response(const ::std::string& value) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Request.response)
}
 void Request::set_response(const char* value) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Request.response)
}
 void Request::set_response(const char* value, size_t size) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Request.response)
}
 ::std::string* Request::mutable_response() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Request.response)
  return response_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_response() {
  
  return response_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_response(::std::string* response) {
  if (response != NULL) {
    
  } else {
    
  }
  response_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Request.response)
}

// optional string request_date = 7;
void Request::clear_request_date() {
  request_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Request::request_date() const {
  // @@protoc_insertion_point(field_get:helloworld.Request.request_date)
  return request_date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_request_date(const ::std::string& value) {
  
  request_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Request.request_date)
}
 void Request::set_request_date(const char* value) {
  
  request_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Request.request_date)
}
 void Request::set_request_date(const char* value, size_t size) {
  
  request_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Request.request_date)
}
 ::std::string* Request::mutable_request_date() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Request.request_date)
  return request_date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_request_date() {
  
  return request_date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_request_date(::std::string* request_date) {
  if (request_date != NULL) {
    
  } else {
    
  }
  request_date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_date);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Request.request_date)
}

// optional string response_date = 8;
void Request::clear_response_date() {
  response_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Request::response_date() const {
  // @@protoc_insertion_point(field_get:helloworld.Request.response_date)
  return response_date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_response_date(const ::std::string& value) {
  
  response_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Request.response_date)
}
 void Request::set_response_date(const char* value) {
  
  response_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Request.response_date)
}
 void Request::set_response_date(const char* value, size_t size) {
  
  response_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Request.response_date)
}
 ::std::string* Request::mutable_response_date() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Request.response_date)
  return response_date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_response_date() {
  
  return response_date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_response_date(::std::string* response_date) {
  if (response_date != NULL) {
    
  } else {
    
  }
  response_date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_date);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Request.response_date)
}

// optional string ignore_from = 9;
void Request::clear_ignore_from() {
  ignore_from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Request::ignore_from() const {
  // @@protoc_insertion_point(field_get:helloworld.Request.ignore_from)
  return ignore_from_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_ignore_from(const ::std::string& value) {
  
  ignore_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Request.ignore_from)
}
 void Request::set_ignore_from(const char* value) {
  
  ignore_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Request.ignore_from)
}
 void Request::set_ignore_from(const char* value, size_t size) {
  
  ignore_from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Request.ignore_from)
}
 ::std::string* Request::mutable_ignore_from() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Request.ignore_from)
  return ignore_from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_ignore_from() {
  
  return ignore_from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_ignore_from(::std::string* ignore_from) {
  if (ignore_from != NULL) {
    
  } else {
    
  }
  ignore_from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ignore_from);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Request.ignore_from)
}

// optional string ignore_to = 10;
void Request::clear_ignore_to() {
  ignore_to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Request::ignore_to() const {
  // @@protoc_insertion_point(field_get:helloworld.Request.ignore_to)
  return ignore_to_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_ignore_to(const ::std::string& value) {
  
  ignore_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Request.ignore_to)
}
 void Request::set_ignore_to(const char* value) {
  
  ignore_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Request.ignore_to)
}
 void Request::set_ignore_to(const char* value, size_t size) {
  
  ignore_to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Request.ignore_to)
}
 ::std::string* Request::mutable_ignore_to() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Request.ignore_to)
  return ignore_to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_ignore_to() {
  
  return ignore_to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_ignore_to(::std::string* ignore_to) {
  if (ignore_to != NULL) {
    
  } else {
    
  }
  ignore_to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ignore_to);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Request.ignore_to)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int Response::kRequestIdFieldNumber;
const int Response::kSenderFieldNumber;
const int Response::kReceiverFieldNumber;
const int Response::kResponseFieldNumber;
const int Response::kResponseDateFieldNumber;
#endif  // !_MSC_VER

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.Response)
}

void Response::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Response::Response(const Response& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.Response)
}

void Response::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  request_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:helloworld.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  request_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_descriptor_;
}

const Response& Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

Response* Response::default_instance_ = NULL;

Response* Response::New(::google::protobuf::Arena* arena) const {
  Response* n = new Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Response::Clear() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string request_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_request_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->request_id().data(), this->request_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Response.request_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sender;
        break;
      }

      // optional string sender = 2;
      case 2: {
        if (tag == 18) {
         parse_sender:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sender()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sender().data(), this->sender().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Response.sender");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_receiver;
        break;
      }

      // optional string receiver = 3;
      case 3: {
        if (tag == 26) {
         parse_receiver:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receiver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->receiver().data(), this->receiver().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Response.receiver");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_response;
        break;
      }

      // optional string response = 4;
      case 4: {
        if (tag == 34) {
         parse_response:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->response().data(), this->response().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Response.response");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_response_date;
        break;
      }

      // optional string response_date = 5;
      case 5: {
        if (tag == 42) {
         parse_response_date:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_date()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->response_date().data(), this->response_date().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.Response.response_date");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.Response)
  // optional string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Response.request_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->request_id(), output);
  }

  // optional string sender = 2;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Response.sender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sender(), output);
  }

  // optional string receiver = 3;
  if (this->receiver().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receiver().data(), this->receiver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Response.receiver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->receiver(), output);
  }

  // optional string response = 4;
  if (this->response().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response().data(), this->response().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Response.response");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->response(), output);
  }

  // optional string response_date = 5;
  if (this->response_date().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response_date().data(), this->response_date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Response.response_date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->response_date(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.Response)
}

::google::protobuf::uint8* Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.Response)
  // optional string request_id = 1;
  if (this->request_id().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->request_id().data(), this->request_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Response.request_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->request_id(), target);
  }

  // optional string sender = 2;
  if (this->sender().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sender().data(), this->sender().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Response.sender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sender(), target);
  }

  // optional string receiver = 3;
  if (this->receiver().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->receiver().data(), this->receiver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Response.receiver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->receiver(), target);
  }

  // optional string response = 4;
  if (this->response().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response().data(), this->response().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Response.response");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->response(), target);
  }

  // optional string response_date = 5;
  if (this->response_date().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->response_date().data(), this->response_date().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.Response.response_date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->response_date(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.Response)
  return target;
}

int Response::ByteSize() const {
  int total_size = 0;

  // optional string request_id = 1;
  if (this->request_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->request_id());
  }

  // optional string sender = 2;
  if (this->sender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sender());
  }

  // optional string receiver = 3;
  if (this->receiver().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receiver());
  }

  // optional string response = 4;
  if (this->response().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response());
  }

  // optional string response_date = 5;
  if (this->response_date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_date());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Response* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.request_id().size() > 0) {

    request_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.request_id_);
  }
  if (from.sender().size() > 0) {

    sender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sender_);
  }
  if (from.receiver().size() > 0) {

    receiver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receiver_);
  }
  if (from.response().size() > 0) {

    response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_);
  }
  if (from.response_date().size() > 0) {

    response_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_date_);
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {

  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  request_id_.Swap(&other->request_id_);
  sender_.Swap(&other->sender_);
  receiver_.Swap(&other->receiver_);
  response_.Swap(&other->response_);
  response_date_.Swap(&other->response_date_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_descriptor_;
  metadata.reflection = Response_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Response

// optional string request_id = 1;
void Response::clear_request_id() {
  request_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Response::request_id() const {
  // @@protoc_insertion_point(field_get:helloworld.Response.request_id)
  return request_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_request_id(const ::std::string& value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Response.request_id)
}
 void Response::set_request_id(const char* value) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Response.request_id)
}
 void Response::set_request_id(const char* value, size_t size) {
  
  request_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Response.request_id)
}
 ::std::string* Response::mutable_request_id() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Response.request_id)
  return request_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response::release_request_id() {
  
  return request_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_allocated_request_id(::std::string* request_id) {
  if (request_id != NULL) {
    
  } else {
    
  }
  request_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_id);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Response.request_id)
}

// optional string sender = 2;
void Response::clear_sender() {
  sender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Response::sender() const {
  // @@protoc_insertion_point(field_get:helloworld.Response.sender)
  return sender_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_sender(const ::std::string& value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Response.sender)
}
 void Response::set_sender(const char* value) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Response.sender)
}
 void Response::set_sender(const char* value, size_t size) {
  
  sender_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Response.sender)
}
 ::std::string* Response::mutable_sender() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Response.sender)
  return sender_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response::release_sender() {
  
  return sender_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_allocated_sender(::std::string* sender) {
  if (sender != NULL) {
    
  } else {
    
  }
  sender_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sender);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Response.sender)
}

// optional string receiver = 3;
void Response::clear_receiver() {
  receiver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Response::receiver() const {
  // @@protoc_insertion_point(field_get:helloworld.Response.receiver)
  return receiver_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_receiver(const ::std::string& value) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Response.receiver)
}
 void Response::set_receiver(const char* value) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Response.receiver)
}
 void Response::set_receiver(const char* value, size_t size) {
  
  receiver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Response.receiver)
}
 ::std::string* Response::mutable_receiver() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Response.receiver)
  return receiver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response::release_receiver() {
  
  return receiver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_allocated_receiver(::std::string* receiver) {
  if (receiver != NULL) {
    
  } else {
    
  }
  receiver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receiver);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Response.receiver)
}

// optional string response = 4;
void Response::clear_response() {
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Response::response() const {
  // @@protoc_insertion_point(field_get:helloworld.Response.response)
  return response_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_response(const ::std::string& value) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Response.response)
}
 void Response::set_response(const char* value) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Response.response)
}
 void Response::set_response(const char* value, size_t size) {
  
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Response.response)
}
 ::std::string* Response::mutable_response() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Response.response)
  return response_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response::release_response() {
  
  return response_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_allocated_response(::std::string* response) {
  if (response != NULL) {
    
  } else {
    
  }
  response_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Response.response)
}

// optional string response_date = 5;
void Response::clear_response_date() {
  response_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Response::response_date() const {
  // @@protoc_insertion_point(field_get:helloworld.Response.response_date)
  return response_date_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_response_date(const ::std::string& value) {
  
  response_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.Response.response_date)
}
 void Response::set_response_date(const char* value) {
  
  response_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.Response.response_date)
}
 void Response::set_response_date(const char* value, size_t size) {
  
  response_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.Response.response_date)
}
 ::std::string* Response::mutable_response_date() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.Response.response_date)
  return response_date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Response::release_response_date() {
  
  return response_date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Response::set_allocated_response_date(::std::string* response_date) {
  if (response_date != NULL) {
    
  } else {
    
  }
  response_date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_date);
  // @@protoc_insertion_point(field_set_allocated:helloworld.Response.response_date)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int IgnoreMessage::kRequestLogIdFieldNumber;
const int IgnoreMessage::kUserFieldNumber;
#endif  // !_MSC_VER

IgnoreMessage::IgnoreMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.IgnoreMessage)
}

void IgnoreMessage::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

IgnoreMessage::IgnoreMessage(const IgnoreMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.IgnoreMessage)
}

void IgnoreMessage::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  requestlog_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

IgnoreMessage::~IgnoreMessage() {
  // @@protoc_insertion_point(destructor:helloworld.IgnoreMessage)
  SharedDtor();
}

void IgnoreMessage::SharedDtor() {
  requestlog_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void IgnoreMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IgnoreMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IgnoreMessage_descriptor_;
}

const IgnoreMessage& IgnoreMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

IgnoreMessage* IgnoreMessage::default_instance_ = NULL;

IgnoreMessage* IgnoreMessage::New(::google::protobuf::Arena* arena) const {
  IgnoreMessage* n = new IgnoreMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IgnoreMessage::Clear() {
  requestlog_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool IgnoreMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.IgnoreMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string requestLog_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requestlog_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->requestlog_id().data(), this->requestlog_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.IgnoreMessage.requestLog_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user;
        break;
      }

      // optional string user = 2;
      case 2: {
        if (tag == 18) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user().data(), this->user().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.IgnoreMessage.user");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.IgnoreMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.IgnoreMessage)
  return false;
#undef DO_
}

void IgnoreMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.IgnoreMessage)
  // optional string requestLog_id = 1;
  if (this->requestlog_id().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requestlog_id().data(), this->requestlog_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.IgnoreMessage.requestLog_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->requestlog_id(), output);
  }

  // optional string user = 2;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.IgnoreMessage.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.IgnoreMessage)
}

::google::protobuf::uint8* IgnoreMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.IgnoreMessage)
  // optional string requestLog_id = 1;
  if (this->requestlog_id().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requestlog_id().data(), this->requestlog_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.IgnoreMessage.requestLog_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->requestlog_id(), target);
  }

  // optional string user = 2;
  if (this->user().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.IgnoreMessage.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.IgnoreMessage)
  return target;
}

int IgnoreMessage::ByteSize() const {
  int total_size = 0;

  // optional string requestLog_id = 1;
  if (this->requestlog_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->requestlog_id());
  }

  // optional string user = 2;
  if (this->user().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IgnoreMessage::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IgnoreMessage* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IgnoreMessage>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void IgnoreMessage::MergeFrom(const IgnoreMessage& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.requestlog_id().size() > 0) {

    requestlog_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requestlog_id_);
  }
  if (from.user().size() > 0) {

    user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
  }
}

void IgnoreMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IgnoreMessage::CopyFrom(const IgnoreMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IgnoreMessage::IsInitialized() const {

  return true;
}

void IgnoreMessage::Swap(IgnoreMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IgnoreMessage::InternalSwap(IgnoreMessage* other) {
  requestlog_id_.Swap(&other->requestlog_id_);
  user_.Swap(&other->user_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IgnoreMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IgnoreMessage_descriptor_;
  metadata.reflection = IgnoreMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IgnoreMessage

// optional string requestLog_id = 1;
void IgnoreMessage::clear_requestlog_id() {
  requestlog_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& IgnoreMessage::requestlog_id() const {
  // @@protoc_insertion_point(field_get:helloworld.IgnoreMessage.requestLog_id)
  return requestlog_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IgnoreMessage::set_requestlog_id(const ::std::string& value) {
  
  requestlog_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.IgnoreMessage.requestLog_id)
}
 void IgnoreMessage::set_requestlog_id(const char* value) {
  
  requestlog_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.IgnoreMessage.requestLog_id)
}
 void IgnoreMessage::set_requestlog_id(const char* value, size_t size) {
  
  requestlog_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.IgnoreMessage.requestLog_id)
}
 ::std::string* IgnoreMessage::mutable_requestlog_id() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.IgnoreMessage.requestLog_id)
  return requestlog_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* IgnoreMessage::release_requestlog_id() {
  
  return requestlog_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IgnoreMessage::set_allocated_requestlog_id(::std::string* requestlog_id) {
  if (requestlog_id != NULL) {
    
  } else {
    
  }
  requestlog_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), requestlog_id);
  // @@protoc_insertion_point(field_set_allocated:helloworld.IgnoreMessage.requestLog_id)
}

// optional string user = 2;
void IgnoreMessage::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& IgnoreMessage::user() const {
  // @@protoc_insertion_point(field_get:helloworld.IgnoreMessage.user)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IgnoreMessage::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.IgnoreMessage.user)
}
 void IgnoreMessage::set_user(const char* value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.IgnoreMessage.user)
}
 void IgnoreMessage::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.IgnoreMessage.user)
}
 ::std::string* IgnoreMessage::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.IgnoreMessage.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* IgnoreMessage::release_user() {
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void IgnoreMessage::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:helloworld.IgnoreMessage.user)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#ifndef _MSC_VER
const int BillPayment::kBillIdFieldNumber;
const int BillPayment::kPaidStatusFieldNumber;
#endif  // !_MSC_VER

BillPayment::BillPayment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:helloworld.BillPayment)
}

void BillPayment::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

BillPayment::BillPayment(const BillPayment& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:helloworld.BillPayment)
}

void BillPayment::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bill_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paidstatus_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BillPayment::~BillPayment() {
  // @@protoc_insertion_point(destructor:helloworld.BillPayment)
  SharedDtor();
}

void BillPayment::SharedDtor() {
  bill_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paidstatus_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void BillPayment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BillPayment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BillPayment_descriptor_;
}

const BillPayment& BillPayment::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_iShare_2eproto();
  return *default_instance_;
}

BillPayment* BillPayment::default_instance_ = NULL;

BillPayment* BillPayment::New(::google::protobuf::Arena* arena) const {
  BillPayment* n = new BillPayment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BillPayment::Clear() {
  bill_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  paidstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BillPayment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:helloworld.BillPayment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bill_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bill_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bill_id().data(), this->bill_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.BillPayment.bill_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_paidStatus;
        break;
      }

      // optional string paidStatus = 2;
      case 2: {
        if (tag == 18) {
         parse_paidStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_paidstatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->paidstatus().data(), this->paidstatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "helloworld.BillPayment.paidStatus");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:helloworld.BillPayment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:helloworld.BillPayment)
  return false;
#undef DO_
}

void BillPayment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:helloworld.BillPayment)
  // optional string bill_id = 1;
  if (this->bill_id().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bill_id().data(), this->bill_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.BillPayment.bill_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bill_id(), output);
  }

  // optional string paidStatus = 2;
  if (this->paidstatus().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->paidstatus().data(), this->paidstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.BillPayment.paidStatus");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->paidstatus(), output);
  }

  // @@protoc_insertion_point(serialize_end:helloworld.BillPayment)
}

::google::protobuf::uint8* BillPayment::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:helloworld.BillPayment)
  // optional string bill_id = 1;
  if (this->bill_id().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bill_id().data(), this->bill_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.BillPayment.bill_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bill_id(), target);
  }

  // optional string paidStatus = 2;
  if (this->paidstatus().size() > 0) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->paidstatus().data(), this->paidstatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "helloworld.BillPayment.paidStatus");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->paidstatus(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:helloworld.BillPayment)
  return target;
}

int BillPayment::ByteSize() const {
  int total_size = 0;

  // optional string bill_id = 1;
  if (this->bill_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bill_id());
  }

  // optional string paidStatus = 2;
  if (this->paidstatus().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->paidstatus());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BillPayment::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BillPayment* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const BillPayment>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BillPayment::MergeFrom(const BillPayment& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.bill_id().size() > 0) {

    bill_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bill_id_);
  }
  if (from.paidstatus().size() > 0) {

    paidstatus_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.paidstatus_);
  }
}

void BillPayment::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BillPayment::CopyFrom(const BillPayment& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BillPayment::IsInitialized() const {

  return true;
}

void BillPayment::Swap(BillPayment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BillPayment::InternalSwap(BillPayment* other) {
  bill_id_.Swap(&other->bill_id_);
  paidstatus_.Swap(&other->paidstatus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BillPayment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BillPayment_descriptor_;
  metadata.reflection = BillPayment_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BillPayment

// optional string bill_id = 1;
void BillPayment::clear_bill_id() {
  bill_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BillPayment::bill_id() const {
  // @@protoc_insertion_point(field_get:helloworld.BillPayment.bill_id)
  return bill_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BillPayment::set_bill_id(const ::std::string& value) {
  
  bill_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.BillPayment.bill_id)
}
 void BillPayment::set_bill_id(const char* value) {
  
  bill_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.BillPayment.bill_id)
}
 void BillPayment::set_bill_id(const char* value, size_t size) {
  
  bill_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.BillPayment.bill_id)
}
 ::std::string* BillPayment::mutable_bill_id() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.BillPayment.bill_id)
  return bill_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BillPayment::release_bill_id() {
  
  return bill_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BillPayment::set_allocated_bill_id(::std::string* bill_id) {
  if (bill_id != NULL) {
    
  } else {
    
  }
  bill_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bill_id);
  // @@protoc_insertion_point(field_set_allocated:helloworld.BillPayment.bill_id)
}

// optional string paidStatus = 2;
void BillPayment::clear_paidstatus() {
  paidstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& BillPayment::paidstatus() const {
  // @@protoc_insertion_point(field_get:helloworld.BillPayment.paidStatus)
  return paidstatus_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BillPayment::set_paidstatus(const ::std::string& value) {
  
  paidstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:helloworld.BillPayment.paidStatus)
}
 void BillPayment::set_paidstatus(const char* value) {
  
  paidstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:helloworld.BillPayment.paidStatus)
}
 void BillPayment::set_paidstatus(const char* value, size_t size) {
  
  paidstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:helloworld.BillPayment.paidStatus)
}
 ::std::string* BillPayment::mutable_paidstatus() {
  
  // @@protoc_insertion_point(field_mutable:helloworld.BillPayment.paidStatus)
  return paidstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* BillPayment::release_paidstatus() {
  
  return paidstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void BillPayment::set_allocated_paidstatus(::std::string* paidstatus) {
  if (paidstatus != NULL) {
    
  } else {
    
  }
  paidstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), paidstatus);
  // @@protoc_insertion_point(field_set_allocated:helloworld.BillPayment.paidStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace helloworld

// @@protoc_insertion_point(global_scope)
